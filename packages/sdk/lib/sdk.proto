
syntax = "proto3";

package kproto;

message Error {
  string Code = 1;
  string Message = 2;
}

message Success {}

message Paging {
	int64 AllCount = 1;
	int64 PageIndex = 2;
	int64 PageSize = 3;
}

// 确认收到消息
message StateAck {
  int64 ChatID = 1;
  uint64 MessageID = 2;
  uint64 State = 3;
}

// 已读消息
message StateReadAck {
  int64 ChatID = 1;
  uint64 MessageID = 2;
  int32 MessageType = 3;
  uint64 StateRead = 4;
}

// todo : 改为数组形式批量更新, 减少消息数量, 提高效率
message StateUpdate {
  int64 ChatID = 1;
  uint64 MessageID = 2;
  int32 MessageType = 3;
  uint64 State = 4;
  UpdateMessage UpdateMessage = 5; // union message, must set one of UpdateMessage
}

message UpdateMessage {
  UpdateMessageChatAddMember UpdateMessageChatAddMember = 1;
  UpdateMessageChatSendMessage UpdateMessageChatSendMessage = 2;
}

message UpdateMessageChatAddMember {
  int64 ChatID = 1;
  string SenderName = 2;
  string AddedMemeberName = 3;
}

message UpdateMessageChatSendMessage {
  int64 ChatID = 1;
  string SenderName = 2;
  string Message = 3;
}

// request and response
message AuthKeyReq {
}

message AuthKeyResp {
}

message HeartbeatReq {
}

message HeartbeatResp {
}

message InitConnectionReq {
}

message InitConnectionResp {
}

message RequestVerificationCodeReq {
}

message RequestVerificationCodeResp {
}

message CheckAppUpdateReq {
}

message CheckAppUpdateResp {
}

message User {
  int64 ID = 1;
  string UserName = 2;
}

message UserRegisterReq {
  string UserName = 1;
  string Password = 2;
}

message UserRegisterResp {
  User User = 1;
}

message UserLoginReq {
  string UserName = 1;
  string Password = 2;
}

message UserLoginResp {
  uint64 SessionID = 1;
}

message UserLogoutReq {
}

message UserLogoutResp {
}

message ContactAddReq {
}

message ContactAddResp {
}

message ContactUpdateReq {
}

message ContactUpdateResp {
}

message ContactDeleteReq {
}

message ContactDeleteResp {
}

// chat struct
// 协议结构里, 时间类型统一使用时间戳 int64
message Chat {
  int64 ID = 1;
  int64 CreateAt = 2;
  int64 UpdatedAt = 3;
  int32 ChatType = 4;
  string Title = 5;
  int32 Disabled = 6;
}

// 用户只能创建普通群
// 其他类型的群由系统自动创建
message ChatCreateReq {
  string Title = 1;
  // int32 ChatType = 2;
  // int64 PeerID = 3;
}

message ChatCreateResp {
  Chat Chat = 1;
}

// 发起聊天 one on one
// 联系人或者陌生人
message ChatInitiateReq {
  int64 PeerID = 1;
}

message ChatInitiateResp {
  Chat Chat = 1;
}

message ChatGetChatsReq {
}

message ChatGetChatsResp {
  repeated Chat Chats = 1;
}

message ChatAddMemberReq {
  int64 ChatID = 1;
  int64 UserID = 2;
}

message ChatAddMemberResp {
}

message ChatSendMessageReq {
  int64 ChatID = 1;
  int32 ContentType = 2;
  string Message = 3;
}

message ChatSendMessageResp {
}

message ChatUploadMediaReq {
  int64 ChatID = 1;
  int32 ContentType = 2;
  int32 HasNext = 3;
  bytes Data = 4;
}

message ChatUploadMediaResp {
}

message ChatSetTypingReq {
  int64 ChatID = 1;
}

message ChatSetTypingResp {
}

message ChatSyncChatMessagesReq {
  int64 ChatID = 1;
  uint64 State = 2;
}

message ChatSyncChatMessagesResp {
  repeated StateUpdate StateUpdates = 1;
}

message ChatGetChatMessagesReq {
}

message ChatGetChatMessagesResp {
}
